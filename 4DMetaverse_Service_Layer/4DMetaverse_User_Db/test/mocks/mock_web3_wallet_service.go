// Code generated by MockGen. DO NOT EDIT.
// Source: 4dmetaverse/user_db/internal/service (interfaces: Web3WalletService)

// Package mocks is a generated GoMock package.
package mocks

import (
	entity "4dmetaverse/user_db/internal/entity"
	service "4dmetaverse/user_db/internal/service"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockWeb3WalletService is a mock of Web3WalletService interface.
type MockWeb3WalletService struct {
	ctrl     *gomock.Controller
	recorder *MockWeb3WalletServiceMockRecorder
}

// MockWeb3WalletServiceMockRecorder is the mock recorder for MockWeb3WalletService.
type MockWeb3WalletServiceMockRecorder struct {
	mock *MockWeb3WalletService
}

// NewMockWeb3WalletService creates a new mock instance.
func NewMockWeb3WalletService(ctrl *gomock.Controller) *MockWeb3WalletService {
	mock := &MockWeb3WalletService{ctrl: ctrl}
	mock.recorder = &MockWeb3WalletServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWeb3WalletService) EXPECT() *MockWeb3WalletServiceMockRecorder {
	return m.recorder
}

// CreateEntity mocks base method.
func (m *MockWeb3WalletService) CreateEntity(arg0 service.Web3WalletCreateDTO) (*entity.Web3Wallet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateEntity", arg0)
	ret0, _ := ret[0].(*entity.Web3Wallet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateEntity indicates an expected call of CreateEntity.
func (mr *MockWeb3WalletServiceMockRecorder) CreateEntity(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateEntity", reflect.TypeOf((*MockWeb3WalletService)(nil).CreateEntity), arg0)
}

// GetEntitiesBySQL mocks base method.
func (m *MockWeb3WalletService) GetEntitiesBySQL(arg0 string) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEntitiesBySQL", arg0)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// GetEntitiesBySQL indicates an expected call of GetEntitiesBySQL.
func (mr *MockWeb3WalletServiceMockRecorder) GetEntitiesBySQL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEntitiesBySQL", reflect.TypeOf((*MockWeb3WalletService)(nil).GetEntitiesBySQL), arg0)
}

// GetEntityByAddress mocks base method.
func (m *MockWeb3WalletService) GetEntityByAddress(arg0 string) (*entity.Web3Wallet, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEntityByAddress", arg0)
	ret0, _ := ret[0].(*entity.Web3Wallet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEntityByAddress indicates an expected call of GetEntityByAddress.
func (mr *MockWeb3WalletServiceMockRecorder) GetEntityByAddress(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEntityByAddress", reflect.TypeOf((*MockWeb3WalletService)(nil).GetEntityByAddress), arg0)
}
