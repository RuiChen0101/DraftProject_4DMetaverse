// Code generated by MockGen. DO NOT EDIT.
// Source: 4dmetaverse/storage_service/internal/service (interfaces: FileService)

// Package mocks is a generated GoMock package.
package mocks

import (
	entity "4dmetaverse/storage_service/internal/entity"
	service "4dmetaverse/storage_service/internal/service"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFileService is a mock of FileService interface.
type MockFileService struct {
	ctrl     *gomock.Controller
	recorder *MockFileServiceMockRecorder
}

// MockFileServiceMockRecorder is the mock recorder for MockFileService.
type MockFileServiceMockRecorder struct {
	mock *MockFileService
}

// NewMockFileService creates a new mock instance.
func NewMockFileService(ctrl *gomock.Controller) *MockFileService {
	mock := &MockFileService{ctrl: ctrl}
	mock.recorder = &MockFileServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileService) EXPECT() *MockFileServiceMockRecorder {
	return m.recorder
}

// CreateEntity mocks base method.
func (m *MockFileService) CreateEntity(arg0 service.FileCreateDTO) (*entity.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateEntity", arg0)
	ret0, _ := ret[0].(*entity.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateEntity indicates an expected call of CreateEntity.
func (mr *MockFileServiceMockRecorder) CreateEntity(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateEntity", reflect.TypeOf((*MockFileService)(nil).CreateEntity), arg0)
}

// DeleteEntity mocks base method.
func (m *MockFileService) DeleteEntity(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteEntity", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteEntity indicates an expected call of DeleteEntity.
func (mr *MockFileServiceMockRecorder) DeleteEntity(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteEntity", reflect.TypeOf((*MockFileService)(nil).DeleteEntity), arg0)
}

// DeleteEntityBePath mocks base method.
func (m *MockFileService) DeleteEntityBePath(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteEntityBePath", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteEntityBePath indicates an expected call of DeleteEntityBePath.
func (mr *MockFileServiceMockRecorder) DeleteEntityBePath(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteEntityBePath", reflect.TypeOf((*MockFileService)(nil).DeleteEntityBePath), arg0)
}

// GetEntitiesByDirId mocks base method.
func (m *MockFileService) GetEntitiesByDirId(arg0 uint64) ([]entity.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEntitiesByDirId", arg0)
	ret0, _ := ret[0].([]entity.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEntitiesByDirId indicates an expected call of GetEntitiesByDirId.
func (mr *MockFileServiceMockRecorder) GetEntitiesByDirId(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEntitiesByDirId", reflect.TypeOf((*MockFileService)(nil).GetEntitiesByDirId), arg0)
}

// GetEntitiesByPathPrefix mocks base method.
func (m *MockFileService) GetEntitiesByPathPrefix(arg0 string) ([]entity.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEntitiesByPathPrefix", arg0)
	ret0, _ := ret[0].([]entity.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEntitiesByPathPrefix indicates an expected call of GetEntitiesByPathPrefix.
func (mr *MockFileServiceMockRecorder) GetEntitiesByPathPrefix(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEntitiesByPathPrefix", reflect.TypeOf((*MockFileService)(nil).GetEntitiesByPathPrefix), arg0)
}

// GetEntitiesBySQL mocks base method.
func (m *MockFileService) GetEntitiesBySQL(arg0 string) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEntitiesBySQL", arg0)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// GetEntitiesBySQL indicates an expected call of GetEntitiesBySQL.
func (mr *MockFileServiceMockRecorder) GetEntitiesBySQL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEntitiesBySQL", reflect.TypeOf((*MockFileService)(nil).GetEntitiesBySQL), arg0)
}

// GetEntity mocks base method.
func (m *MockFileService) GetEntity(arg0 string) (*entity.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEntity", arg0)
	ret0, _ := ret[0].(*entity.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEntity indicates an expected call of GetEntity.
func (mr *MockFileServiceMockRecorder) GetEntity(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEntity", reflect.TypeOf((*MockFileService)(nil).GetEntity), arg0)
}

// GetEntityByPath mocks base method.
func (m *MockFileService) GetEntityByPath(arg0 string) (*entity.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEntityByPath", arg0)
	ret0, _ := ret[0].(*entity.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEntityByPath indicates an expected call of GetEntityByPath.
func (mr *MockFileServiceMockRecorder) GetEntityByPath(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEntityByPath", reflect.TypeOf((*MockFileService)(nil).GetEntityByPath), arg0)
}

// Save mocks base method.
func (m *MockFileService) Save(arg0 service.FileSaveDTO) (*entity.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(*entity.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockFileServiceMockRecorder) Save(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockFileService)(nil).Save), arg0)
}

// Swap mocks base method.
func (m *MockFileService) Swap(arg0 string, arg1 service.FileSwapDTO) (*entity.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Swap", arg0, arg1)
	ret0, _ := ret[0].(*entity.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Swap indicates an expected call of Swap.
func (mr *MockFileServiceMockRecorder) Swap(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Swap", reflect.TypeOf((*MockFileService)(nil).Swap), arg0, arg1)
}

// UpdateEntity mocks base method.
func (m *MockFileService) UpdateEntity(arg0 string, arg1 service.FileUpdateDTO) (*entity.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateEntity", arg0, arg1)
	ret0, _ := ret[0].(*entity.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateEntity indicates an expected call of UpdateEntity.
func (mr *MockFileServiceMockRecorder) UpdateEntity(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateEntity", reflect.TypeOf((*MockFileService)(nil).UpdateEntity), arg0, arg1)
}
