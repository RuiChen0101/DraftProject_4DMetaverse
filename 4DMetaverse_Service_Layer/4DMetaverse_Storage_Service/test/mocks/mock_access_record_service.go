// Code generated by MockGen. DO NOT EDIT.
// Source: 4dmetaverse/storage_service/internal/service (interfaces: AccessRecordService)

// Package mocks is a generated GoMock package.
package mocks

import (
	service "4dmetaverse/storage_service/internal/service"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAccessRecordService is a mock of AccessRecordService interface.
type MockAccessRecordService struct {
	ctrl     *gomock.Controller
	recorder *MockAccessRecordServiceMockRecorder
}

// MockAccessRecordServiceMockRecorder is the mock recorder for MockAccessRecordService.
type MockAccessRecordServiceMockRecorder struct {
	mock *MockAccessRecordService
}

// NewMockAccessRecordService creates a new mock instance.
func NewMockAccessRecordService(ctrl *gomock.Controller) *MockAccessRecordService {
	mock := &MockAccessRecordService{ctrl: ctrl}
	mock.recorder = &MockAccessRecordServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccessRecordService) EXPECT() *MockAccessRecordServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockAccessRecordService) Create(arg0 service.AccessRecordCreateDto) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockAccessRecordServiceMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockAccessRecordService)(nil).Create), arg0)
}

// GetEntitiesBySQL mocks base method.
func (m *MockAccessRecordService) GetEntitiesBySQL(arg0 string) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEntitiesBySQL", arg0)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// GetEntitiesBySQL indicates an expected call of GetEntitiesBySQL.
func (mr *MockAccessRecordServiceMockRecorder) GetEntitiesBySQL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEntitiesBySQL", reflect.TypeOf((*MockAccessRecordService)(nil).GetEntitiesBySQL), arg0)
}
