// Code generated by MockGen. DO NOT EDIT.
// Source: 4dmetaverse/main_db/internal/repository (interfaces: UnlockedCollectionRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	entity "4dmetaverse/main_db/internal/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUnlockedCollectionRepo is a mock of UnlockedCollectionRepo interface.
type MockUnlockedCollectionRepo struct {
	ctrl     *gomock.Controller
	recorder *MockUnlockedCollectionRepoMockRecorder
}

// MockUnlockedCollectionRepoMockRecorder is the mock recorder for MockUnlockedCollectionRepo.
type MockUnlockedCollectionRepoMockRecorder struct {
	mock *MockUnlockedCollectionRepo
}

// NewMockUnlockedCollectionRepo creates a new mock instance.
func NewMockUnlockedCollectionRepo(ctrl *gomock.Controller) *MockUnlockedCollectionRepo {
	mock := &MockUnlockedCollectionRepo{ctrl: ctrl}
	mock.recorder = &MockUnlockedCollectionRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUnlockedCollectionRepo) EXPECT() *MockUnlockedCollectionRepoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUnlockedCollectionRepo) Create(arg0 *entity.UnlockedCollection) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockUnlockedCollectionRepoMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUnlockedCollectionRepo)(nil).Create), arg0)
}

// Delete mocks base method.
func (m *MockUnlockedCollectionRepo) Delete(arg0 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockUnlockedCollectionRepoMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockUnlockedCollectionRepo)(nil).Delete), arg0)
}

// FindByNativeSQL mocks base method.
func (m *MockUnlockedCollectionRepo) FindByNativeSQL(arg0 string) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByNativeSQL", arg0)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// FindByNativeSQL indicates an expected call of FindByNativeSQL.
func (mr *MockUnlockedCollectionRepoMockRecorder) FindByNativeSQL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByNativeSQL", reflect.TypeOf((*MockUnlockedCollectionRepo)(nil).FindByNativeSQL), arg0)
}
