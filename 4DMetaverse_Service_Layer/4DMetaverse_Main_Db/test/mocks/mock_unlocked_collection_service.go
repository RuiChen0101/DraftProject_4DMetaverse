// Code generated by MockGen. DO NOT EDIT.
// Source: 4dmetaverse/main_db/internal/service (interfaces: UnlockedCollectionService)

// Package mocks is a generated GoMock package.
package mocks

import (
	entity "4dmetaverse/main_db/internal/entity"
	service "4dmetaverse/main_db/internal/service"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUnlockedCollectionService is a mock of UnlockedCollectionService interface.
type MockUnlockedCollectionService struct {
	ctrl     *gomock.Controller
	recorder *MockUnlockedCollectionServiceMockRecorder
}

// MockUnlockedCollectionServiceMockRecorder is the mock recorder for MockUnlockedCollectionService.
type MockUnlockedCollectionServiceMockRecorder struct {
	mock *MockUnlockedCollectionService
}

// NewMockUnlockedCollectionService creates a new mock instance.
func NewMockUnlockedCollectionService(ctrl *gomock.Controller) *MockUnlockedCollectionService {
	mock := &MockUnlockedCollectionService{ctrl: ctrl}
	mock.recorder = &MockUnlockedCollectionServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUnlockedCollectionService) EXPECT() *MockUnlockedCollectionServiceMockRecorder {
	return m.recorder
}

// CreateEntity mocks base method.
func (m *MockUnlockedCollectionService) CreateEntity(arg0 service.UnlockedCollectionCreateDTO) (*entity.UnlockedCollection, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateEntity", arg0)
	ret0, _ := ret[0].(*entity.UnlockedCollection)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateEntity indicates an expected call of CreateEntity.
func (mr *MockUnlockedCollectionServiceMockRecorder) CreateEntity(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateEntity", reflect.TypeOf((*MockUnlockedCollectionService)(nil).CreateEntity), arg0)
}

// DeleteEntity mocks base method.
func (m *MockUnlockedCollectionService) DeleteEntity(arg0 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteEntity", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteEntity indicates an expected call of DeleteEntity.
func (mr *MockUnlockedCollectionServiceMockRecorder) DeleteEntity(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteEntity", reflect.TypeOf((*MockUnlockedCollectionService)(nil).DeleteEntity), arg0)
}

// GetEntitiesBySQL mocks base method.
func (m *MockUnlockedCollectionService) GetEntitiesBySQL(arg0 string) interface{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEntitiesBySQL", arg0)
	ret0, _ := ret[0].(interface{})
	return ret0
}

// GetEntitiesBySQL indicates an expected call of GetEntitiesBySQL.
func (mr *MockUnlockedCollectionServiceMockRecorder) GetEntitiesBySQL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEntitiesBySQL", reflect.TypeOf((*MockUnlockedCollectionService)(nil).GetEntitiesBySQL), arg0)
}
